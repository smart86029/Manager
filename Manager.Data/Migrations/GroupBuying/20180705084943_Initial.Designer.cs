// <auto-generated />
using System;
using Manager.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Manager.Data.migrations.groupbuying
{
    [DbContext(typeof(GroupBuyingContext))]
    [Migration("20180705084943_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("GroupBuying")
                .HasAnnotation("ProductVersion", "2.1.0-rtm-30799")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Manager.Domain.Models.GroupBuying.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(512);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32);

                    b.Property<int>("ProductCategoryId");

                    b.HasKey("ProductId");

                    b.HasIndex("ProductCategoryId");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("Manager.Domain.Models.GroupBuying.ProductCategory", b =>
                {
                    b.Property<int>("ProductCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32);

                    b.Property<int>("StoreId");

                    b.HasKey("ProductCategoryId");

                    b.HasIndex("StoreId");

                    b.ToTable("ProductCategory");
                });

            modelBuilder.Entity("Manager.Domain.Models.GroupBuying.ProductItem", b =>
                {
                    b.Property<int>("ProductItemId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasMaxLength(32);

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(19, 4)");

                    b.Property<int>("ProductId");

                    b.HasKey("ProductItemId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductItem");
                });

            modelBuilder.Entity("Manager.Domain.Models.GroupBuying.Store", b =>
                {
                    b.Property<int>("StoreId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("CreatedOn");

                    b.Property<string>("Description")
                        .HasMaxLength(512);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32);

                    b.Property<string>("Remark")
                        .HasMaxLength(512);

                    b.HasKey("StoreId");

                    b.ToTable("Store");
                });

            modelBuilder.Entity("Manager.Domain.Models.GroupBuying.Product", b =>
                {
                    b.HasOne("Manager.Domain.Models.GroupBuying.ProductCategory", "ProductCategory")
                        .WithMany("Products")
                        .HasForeignKey("ProductCategoryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Manager.Domain.Models.GroupBuying.ProductCategory", b =>
                {
                    b.HasOne("Manager.Domain.Models.GroupBuying.Store", "Store")
                        .WithMany("ProductCategories")
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Manager.Domain.Models.GroupBuying.ProductItem", b =>
                {
                    b.HasOne("Manager.Domain.Models.GroupBuying.Product", "Product")
                        .WithMany("ProductItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Manager.Domain.Models.GroupBuying.Store", b =>
                {
                    b.OwnsOne("Manager.Domain.Models.Generic.Address", "Address", b1 =>
                        {
                            b1.Property<int?>("StoreId")
                                .ValueGeneratedOnAdd()
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasColumnName("City")
                                .HasMaxLength(32);

                            b1.Property<string>("Country")
                                .IsRequired()
                                .HasColumnName("Country")
                                .HasMaxLength(32);

                            b1.Property<string>("District")
                                .IsRequired()
                                .HasColumnName("District")
                                .HasMaxLength(32);

                            b1.Property<string>("PostalCode")
                                .IsRequired()
                                .HasColumnName("PostalCode")
                                .HasMaxLength(8);

                            b1.Property<string>("Street")
                                .IsRequired()
                                .HasColumnName("Street")
                                .HasMaxLength(128);

                            b1.ToTable("Store","GroupBuying");

                            b1.HasOne("Manager.Domain.Models.GroupBuying.Store")
                                .WithOne("Address")
                                .HasForeignKey("Manager.Domain.Models.Generic.Address", "StoreId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });

                    b.OwnsOne("Manager.Domain.Models.Generic.Phone", "Phone", b1 =>
                        {
                            b1.Property<int?>("StoreId")
                                .ValueGeneratedOnAdd()
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("AreaCode")
                                .IsRequired()
                                .HasColumnName("AreaCode")
                                .HasMaxLength(4);

                            b1.Property<string>("BaseNumber")
                                .IsRequired()
                                .HasColumnName("BaseNumber")
                                .HasMaxLength(16);

                            b1.Property<string>("CountryCode")
                                .IsRequired()
                                .HasColumnName("CountryCode")
                                .HasMaxLength(4);

                            b1.Property<string>("Extension")
                                .IsRequired()
                                .HasColumnName("Extension")
                                .HasMaxLength(8);

                            b1.Property<int>("PhoneType")
                                .HasColumnName("PhoneType");

                            b1.ToTable("Store","GroupBuying");

                            b1.HasOne("Manager.Domain.Models.GroupBuying.Store")
                                .WithOne("Phone")
                                .HasForeignKey("Manager.Domain.Models.Generic.Phone", "StoreId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
