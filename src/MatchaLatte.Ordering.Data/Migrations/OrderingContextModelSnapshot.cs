// <auto-generated />
using System;
using MatchaLatte.Ordering.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MatchaLatte.Ordering.Data.Migrations
{
    [DbContext(typeof(OrderingContext))]
    partial class OrderingContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("Ordering")
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MatchaLatte.Common.Domain.DomainEvent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BuyerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("OrderItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("OrderItemProductAccessoryId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("BuyerId");

                    b.HasIndex("OrderId");

                    b.HasIndex("OrderItemId");

                    b.HasIndex("OrderItemProductAccessoryId");

                    b.ToTable("DomainEvent");

                    b.HasDiscriminator();
                });

            modelBuilder.Entity("MatchaLatte.Common.Events.EventLog", b =>
                {
                    b.Property<Guid>("EventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("EventContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EventTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("EventTypeNamespace")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<int>("PublishCount")
                        .HasColumnType("int");

                    b.Property<int>("PublishState")
                        .HasColumnType("int");

                    b.HasKey("EventId");

                    b.ToTable("EventLog","Common");
                });

            modelBuilder.Entity("MatchaLatte.Ordering.Domain.Buyers.Buyer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(32)")
                        .HasMaxLength(32);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(32)")
                        .HasMaxLength(32);

                    b.HasKey("Id");

                    b.ToTable("Buyer");
                });

            modelBuilder.Entity("MatchaLatte.Ordering.Domain.Orders.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("AmountPaid")
                        .HasColumnType("decimal(19, 4)");

                    b.Property<Guid>("BuyerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OrderStatus")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PaidOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BuyerId");

                    b.HasIndex("GroupId");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("MatchaLatte.Ordering.Domain.Orders.OrderItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProductItemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(32)")
                        .HasMaxLength(32);

                    b.Property<decimal>("ProductItemPrice")
                        .HasColumnType("decimal(19, 4)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(32)")
                        .HasMaxLength(32);

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.HasIndex("ProductItemId");

                    b.ToTable("OrderItem");
                });

            modelBuilder.Entity("MatchaLatte.Ordering.Domain.Orders.OrderItemProductAccessory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OrderItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductAccessoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProductAccessoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(32)")
                        .HasMaxLength(32);

                    b.Property<decimal>("ProductAccessoryPrice")
                        .HasColumnType("decimal(19, 4)");

                    b.HasKey("Id");

                    b.HasIndex("OrderItemId");

                    b.HasIndex("ProductAccessoryId");

                    b.ToTable("OrderItemProductAccessory");
                });

            modelBuilder.Entity("MatchaLatte.Common.Domain.DomainEvent", b =>
                {
                    b.HasOne("MatchaLatte.Ordering.Domain.Buyers.Buyer", null)
                        .WithMany("DomainEvents")
                        .HasForeignKey("BuyerId");

                    b.HasOne("MatchaLatte.Ordering.Domain.Orders.Order", null)
                        .WithMany("DomainEvents")
                        .HasForeignKey("OrderId");

                    b.HasOne("MatchaLatte.Ordering.Domain.Orders.OrderItem", null)
                        .WithMany("DomainEvents")
                        .HasForeignKey("OrderItemId");

                    b.HasOne("MatchaLatte.Ordering.Domain.Orders.OrderItemProductAccessory", null)
                        .WithMany("DomainEvents")
                        .HasForeignKey("OrderItemProductAccessoryId");
                });

            modelBuilder.Entity("MatchaLatte.Ordering.Domain.Orders.OrderItem", b =>
                {
                    b.HasOne("MatchaLatte.Ordering.Domain.Orders.Order", null)
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MatchaLatte.Ordering.Domain.Orders.OrderItemProductAccessory", b =>
                {
                    b.HasOne("MatchaLatte.Ordering.Domain.Orders.OrderItem", null)
                        .WithMany("OrderItemProductAccessories")
                        .HasForeignKey("OrderItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
